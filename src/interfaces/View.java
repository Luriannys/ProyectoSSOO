/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

/**
 *
 * @author luria
 */
public class View extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(View.class.getName());

    /**
     * Creates new form View
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewApp = new javax.swing.JTabbedPane();
        settings = new javax.swing.JPanel();
        cycleDurationLabel = new javax.swing.JLabel();
        cycleDuration = new javax.swing.JComboBox<>();
        planificationPolicyLabel = new javax.swing.JLabel();
        planificationPolicy = new javax.swing.JComboBox<>();
        saveSettings = new javax.swing.JButton();
        process = new javax.swing.JPanel();
        shortTimeLabel = new javax.swing.JLabel();
        shortTimePane = new javax.swing.JScrollPane();
        shortTime = new javax.swing.JList<>();
        mediumTimeLabel = new javax.swing.JLabel();
        mediumTimePane = new javax.swing.JScrollPane();
        mediumTime = new javax.swing.JList<>();
        largeTimeLabel = new javax.swing.JLabel();
        largeTimePane = new javax.swing.JScrollPane();
        largeTime = new javax.swing.JList<>();
        blockedLabel = new javax.swing.JLabel();
        blockedPane = new javax.swing.JScrollPane();
        blocked = new javax.swing.JList<>();
        suspendedReadysLabel = new javax.swing.JLabel();
        suspendedReadysPane = new javax.swing.JScrollPane();
        suspendedReadys = new javax.swing.JList<>();
        readysLabel = new javax.swing.JLabel();
        readysPane = new javax.swing.JScrollPane();
        readys = new javax.swing.JList<>();
        finishedLabel = new javax.swing.JLabel();
        finishedPane = new javax.swing.JScrollPane();
        finished = new javax.swing.JList<>();
        clockLabel = new javax.swing.JLabel();
        runningPane = new javax.swing.JPanel();
        runningLabel = new javax.swing.JLabel();
        planPolicy = new javax.swing.JLabel();
        scheduler = new javax.swing.JPanel();
        logLabel = new javax.swing.JLabel();
        logPane = new javax.swing.JScrollPane();
        logList = new javax.swing.JList<>();
        schedulerLabel = new javax.swing.JLabel();
        schedulerPane = new javax.swing.JScrollPane();
        schedulerList = new javax.swing.JList<>();
        graphs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cycleDurationLabel.setText("Duración del ciclo");

        cycleDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cycleDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cycleDurationActionPerformed(evt);
            }
        });

        planificationPolicyLabel.setText("Política de planificación");

        planificationPolicy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        planificationPolicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planificationPolicyActionPerformed(evt);
            }
        });

        saveSettings.setText("Guardar configuración");
        saveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsLayout = new javax.swing.GroupLayout(settings);
        settings.setLayout(settingsLayout);
        settingsLayout.setHorizontalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cycleDuration, 0, 163, Short.MAX_VALUE)
                    .addComponent(cycleDurationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planificationPolicy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planificationPolicyLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsLayout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addComponent(saveSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(346, 346, 346))
        );
        settingsLayout.setVerticalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planificationPolicyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cycleDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planificationPolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cycleDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150)
                .addComponent(saveSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        viewApp.addTab("Configuración", settings);

        shortTimeLabel.setText("Bloq suspendidos corto plazo");

        shortTime.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        shortTimePane.setViewportView(shortTime);

        mediumTimeLabel.setText("Bloq suspendidos mediano plazo");

        mediumTime.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        mediumTimePane.setViewportView(mediumTime);

        largeTimeLabel.setText("Bloq suspendidos largo plazo");

        largeTime.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        largeTimePane.setViewportView(largeTime);

        blockedLabel.setText("Bloqueados");

        blocked.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        blockedPane.setViewportView(blocked);

        suspendedReadysLabel.setText("Listos suspendidos");

        suspendedReadys.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        suspendedReadysPane.setViewportView(suspendedReadys);

        readysLabel.setText("Listos");

        readys.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        readysPane.setViewportView(readys);

        finishedLabel.setText("Terminados");

        finished.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        finishedPane.setViewportView(finished);

        clockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockLabel.setText("CLOCK");
        clockLabel.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));

        runningPane.setBackground(java.awt.Color.lightGray);

        runningLabel.setForeground(java.awt.Color.black);
        runningLabel.setText("Proceso corriendo");

        javax.swing.GroupLayout runningPaneLayout = new javax.swing.GroupLayout(runningPane);
        runningPane.setLayout(runningPaneLayout);
        runningPaneLayout.setHorizontalGroup(
            runningPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(runningPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(runningLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        runningPaneLayout.setVerticalGroup(
            runningPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(runningPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(runningLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        planPolicy.setText("Política de planificación: ");

        javax.swing.GroupLayout processLayout = new javax.swing.GroupLayout(process);
        process.setLayout(processLayout);
        processLayout.setHorizontalGroup(
            processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(planPolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(readysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(shortTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(runningPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(readysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suspendedReadysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suspendedReadysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shortTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mediumTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mediumTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(finishedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finishedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blockedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blockedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(largeTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(largeTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        processLayout.setVerticalGroup(
            processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planPolicy)
                    .addComponent(readysLabel)
                    .addComponent(shortTimeLabel))
                .addGap(4, 4, 4)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(runningPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(readysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(suspendedReadysLabel)
                        .addGap(4, 4, 4)
                        .addComponent(suspendedReadysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(shortTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(mediumTimeLabel)
                        .addGap(4, 4, 4)
                        .addComponent(mediumTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(processLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(finishedLabel)
                        .addGap(4, 4, 4)
                        .addComponent(finishedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(blockedLabel)
                        .addGap(4, 4, 4)
                        .addComponent(blockedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(largeTimeLabel)
                        .addGap(4, 4, 4)
                        .addComponent(largeTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        viewApp.addTab("Procesos", process);

        logLabel.setText("Log");

        logList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        logPane.setViewportView(logList);

        schedulerLabel.setText("Planificador");

        schedulerList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        schedulerPane.setViewportView(schedulerList);

        javax.swing.GroupLayout schedulerLayout = new javax.swing.GroupLayout(scheduler);
        scheduler.setLayout(schedulerLayout);
        schedulerLayout.setHorizontalGroup(
            schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulerLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(schedulerPane)
                    .addComponent(schedulerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logPane)
                    .addComponent(logLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        schedulerLayout.setVerticalGroup(
            schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulerLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logLabel)
                    .addComponent(schedulerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(schedulerPane, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                    .addComponent(logPane))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        viewApp.addTab("Planificador", scheduler);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GRAFICO");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));

        javax.swing.GroupLayout graphsLayout = new javax.swing.GroupLayout(graphs);
        graphs.setLayout(graphsLayout);
        graphsLayout.setHorizontalGroup(
            graphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphsLayout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );
        graphsLayout.setVerticalGroup(
            graphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphsLayout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        viewApp.addTab("Gráficos", graphs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewApp, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void planificationPolicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planificationPolicyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_planificationPolicyActionPerformed

    private void cycleDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cycleDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cycleDurationActionPerformed

    private void saveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveSettingsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new View().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> blocked;
    private javax.swing.JLabel blockedLabel;
    private javax.swing.JScrollPane blockedPane;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JComboBox<String> cycleDuration;
    private javax.swing.JLabel cycleDurationLabel;
    private javax.swing.JList<String> finished;
    private javax.swing.JLabel finishedLabel;
    private javax.swing.JScrollPane finishedPane;
    private javax.swing.JPanel graphs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> largeTime;
    private javax.swing.JLabel largeTimeLabel;
    private javax.swing.JScrollPane largeTimePane;
    private javax.swing.JLabel logLabel;
    private javax.swing.JList<String> logList;
    private javax.swing.JScrollPane logPane;
    private javax.swing.JList<String> mediumTime;
    private javax.swing.JLabel mediumTimeLabel;
    private javax.swing.JScrollPane mediumTimePane;
    private javax.swing.JLabel planPolicy;
    private javax.swing.JComboBox<String> planificationPolicy;
    private javax.swing.JLabel planificationPolicyLabel;
    private javax.swing.JPanel process;
    private javax.swing.JList<String> readys;
    private javax.swing.JLabel readysLabel;
    private javax.swing.JScrollPane readysPane;
    private javax.swing.JLabel runningLabel;
    private javax.swing.JPanel runningPane;
    private javax.swing.JButton saveSettings;
    private javax.swing.JPanel scheduler;
    private javax.swing.JLabel schedulerLabel;
    private javax.swing.JList<String> schedulerList;
    private javax.swing.JScrollPane schedulerPane;
    private javax.swing.JPanel settings;
    private javax.swing.JList<String> shortTime;
    private javax.swing.JLabel shortTimeLabel;
    private javax.swing.JScrollPane shortTimePane;
    private javax.swing.JList<String> suspendedReadys;
    private javax.swing.JLabel suspendedReadysLabel;
    private javax.swing.JScrollPane suspendedReadysPane;
    private javax.swing.JTabbedPane viewApp;
    // End of variables declaration//GEN-END:variables
}
