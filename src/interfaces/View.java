/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import java.time.format.DateTimeFormatter;
import javax.swing.DefaultListModel;
import proyectossoo.CPU;
import proyectossoo.Cola;
import proyectossoo.Proceso;
import proyectossoo.Scheduler;

/**
 *
 * @author luria
 */
public class View extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(View.class.getName());
    Scheduler sch = new Scheduler();
    CPU cpu = new CPU();
    
    //Vista completa
    public View() {
        initComponents();
        
        //Proceso que esta corriendo
        String actualprocess = (String) cpu.getPc().getP_actual().getPCB();
        runningLabel.setText(actualprocess);
        
        //Cola de listos
        DefaultListModel modelReady = new DefaultListModel<>();
        createModel(modelReady, sch.getListo());
        readys.setModel(modelReady);
        
        //Cola de bloqueados
        DefaultListModel modelBlocked = new DefaultListModel<>();
        createModel(modelBlocked, sch.getBloq());
        blocked.setModel(modelBlocked);
        
        //Cola de listos suspendidos
        DefaultListModel modelSuspendedReady = new DefaultListModel<>();
        createModel(modelSuspendedReady, sch.getListoSuspendido());
        suspendedReadys.setModel(modelSuspendedReady);
      
        //Cola de listos bloqueados
        DefaultListModel modelSuspendedBlocked = new DefaultListModel<>();
        createModel(modelSuspendedBlocked, sch.getBloqSuspendido());
        suspendedBlocked.setModel(modelSuspendedBlocked);
        
        //Cola de terminados
        DefaultListModel modelFinished = new DefaultListModel<>();
        createModel(modelFinished, sch.getTerminado());
        finished.setModel(modelFinished);
  
        //Reloj/Cronometro
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                long inicio = System.currentTimeMillis(); // Marca de tiempo inicial
                while (true) {
                    try {
                        Thread.sleep(500);
                        long ahora = System.currentTimeMillis();
                        long transcurrido = ahora - inicio;

                        // Convertimos milisegundos a horas, minutos y segundos
                        long segundos = (transcurrido / 1000);
                        long horas = (segundos / 3600);
                        long minutos = ((segundos % 3600) / 60);
                        long seg = (segundos % 60);

                        // Formateamos como HH:mm:ss
                        String tiempo = String.format("%02d:%02d:%02d", horas, minutos, seg);
                        clockLabel.setText(tiempo);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        Thread thread = new Thread(runnable);
        thread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewApp = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        nameOfProcess = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        numberOfInstructions = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        bounds = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        cyclesOfExceptions = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        cyclesOfSatisfaction = new javax.swing.JSpinner();
        createBottom = new javax.swing.JButton();
        settings = new javax.swing.JPanel();
        cycleDurationLabel = new javax.swing.JLabel();
        planificationPolicyLabel = new javax.swing.JLabel();
        planificationPolicy = new javax.swing.JComboBox<>();
        saveSettings = new javax.swing.JButton();
        cycleDuration = new javax.swing.JSpinner();
        process = new javax.swing.JPanel();
        shortTimeLabel = new javax.swing.JLabel();
        shortTimePane = new javax.swing.JScrollPane();
        blocked = new javax.swing.JList<>();
        mediumTimeLabel = new javax.swing.JLabel();
        mediumTimePane = new javax.swing.JScrollPane();
        suspendedBlocked = new javax.swing.JList<>();
        suspendedReadysLabel = new javax.swing.JLabel();
        suspendedReadysPane = new javax.swing.JScrollPane();
        suspendedReadys = new javax.swing.JList<>();
        readysLabel = new javax.swing.JLabel();
        readysPane = new javax.swing.JScrollPane();
        readys = new javax.swing.JList<>();
        finishedLabel = new javax.swing.JLabel();
        finishedPane = new javax.swing.JScrollPane();
        finished = new javax.swing.JList<>();
        clockLabel = new javax.swing.JLabel();
        runningPane = new javax.swing.JPanel();
        runningLabel = new javax.swing.JLabel();
        planPolicy = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        scheduler = new javax.swing.JPanel();
        logLabel = new javax.swing.JLabel();
        logPane = new javax.swing.JScrollPane();
        logList = new javax.swing.JList<>();
        schedulerLabel = new javax.swing.JLabel();
        schedulerPane = new javax.swing.JScrollPane();
        schedulerList = new javax.swing.JList<>();
        graphs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setText("Nombre del proceso");

        nameOfProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameOfProcessActionPerformed(evt);
            }
        });

        jLabel9.setText("Cantidad de instrucciones");

        numberOfInstructions.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel10.setText("CPU bound ó I/O bound");

        bounds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CPU Bound", "I/O Bound" }));
        bounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boundsActionPerformed(evt);
            }
        });

        jLabel11.setText("# ciclos para generar una excepción");

        cyclesOfExceptions.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        cyclesOfExceptions.setEnabled(false);

        jLabel12.setText("# ciclos para satisfacer una excepción");

        cyclesOfSatisfaction.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        cyclesOfSatisfaction.setEnabled(false);

        createBottom.setText("CREAR");
        createBottom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBottomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nameOfProcess))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(numberOfInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cyclesOfExceptions, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bounds, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(299, 299, 299))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(createBottom))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cyclesOfSatisfaction, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(295, 295, 295))))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bounds, cyclesOfExceptions, cyclesOfSatisfaction, numberOfInstructions});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameOfProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(numberOfInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(bounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cyclesOfExceptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cyclesOfSatisfaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(createBottom)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel8, nameOfProcess});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel9, numberOfInstructions});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bounds, jLabel10});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cyclesOfExceptions, jLabel11});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cyclesOfSatisfaction, jLabel12});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        viewApp.addTab("Creación de procesos", jPanel1);

        cycleDurationLabel.setText("Duración del ciclo");

        planificationPolicyLabel.setText("Política de planificación");

        planificationPolicy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIFO", "Round Robin", "SPN", "SRT", "HRRN", "Realimentación" }));
        planificationPolicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planificationPolicyActionPerformed(evt);
            }
        });

        saveSettings.setText("Guardar configuración");
        saveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsActionPerformed(evt);
            }
        });

        cycleDuration.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout settingsLayout = new javax.swing.GroupLayout(settings);
        settings.setLayout(settingsLayout);
        settingsLayout.setHorizontalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cycleDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cycleDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planificationPolicy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planificationPolicyLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsLayout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addComponent(saveSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(346, 346, 346))
        );

        settingsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cycleDuration, planificationPolicy});

        settingsLayout.setVerticalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planificationPolicyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cycleDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planificationPolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cycleDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150)
                .addComponent(saveSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(295, Short.MAX_VALUE))
        );

        settingsLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cycleDuration, planificationPolicy});

        viewApp.addTab("Configuración", settings);

        shortTimeLabel.setText("Bloqueados");

        blocked.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        shortTimePane.setViewportView(blocked);

        mediumTimeLabel.setText("Bloq suspendidos");

        suspendedBlocked.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        mediumTimePane.setViewportView(suspendedBlocked);

        suspendedReadysLabel.setText("Listos suspendidos");

        suspendedReadys.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        suspendedReadysPane.setViewportView(suspendedReadys);

        readysLabel.setText("Listos");

        readys.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        readysPane.setViewportView(readys);

        finishedLabel.setText("Terminados");

        finished.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        finishedPane.setViewportView(finished);

        clockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockLabel.setText("CLOCK");
        clockLabel.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));

        runningPane.setBackground(java.awt.Color.lightGray);

        runningLabel.setForeground(java.awt.Color.black);
        runningLabel.setText("Proceso corriendo");

        javax.swing.GroupLayout runningPaneLayout = new javax.swing.GroupLayout(runningPane);
        runningPane.setLayout(runningPaneLayout);
        runningPaneLayout.setHorizontalGroup(
            runningPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(runningPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(runningLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        runningPaneLayout.setVerticalGroup(
            runningPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, runningPaneLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(runningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        planPolicy.setText("Política de planificación: ");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CORTO PLAZO");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("LARGO PLAZO");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MEDIANO PLAZO");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout processLayout = new javax.swing.GroupLayout(process);
        process.setLayout(processLayout);
        processLayout.setHorizontalGroup(
            processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(processLayout.createSequentialGroup()
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, processLayout.createSequentialGroup()
                                    .addGap(366, 366, 366)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(processLayout.createSequentialGroup()
                                    .addComponent(planPolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(processLayout.createSequentialGroup()
                                            .addComponent(readysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(10, 10, 10)
                                            .addComponent(shortTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(processLayout.createSequentialGroup()
                                .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(finishedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(finishedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(runningPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(processLayout.createSequentialGroup()
                                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(processLayout.createSequentialGroup()
                                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(suspendedReadysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(suspendedReadysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mediumTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mediumTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(processLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(readysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(shortTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(61, 61, 61))))
        );
        processLayout.setVerticalGroup(
            processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planPolicy)
                    .addComponent(readysLabel)
                    .addComponent(shortTimeLabel))
                .addGap(4, 4, 4)
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(runningPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(processLayout.createSequentialGroup()
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(readysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shortTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(processLayout.createSequentialGroup()
                                .addComponent(suspendedReadysLabel)
                                .addGap(4, 4, 4)
                                .addComponent(suspendedReadysPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(processLayout.createSequentialGroup()
                                .addComponent(mediumTimeLabel)
                                .addGap(4, 4, 4)
                                .addComponent(mediumTimePane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addGroup(processLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(processLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finishedLabel)
                        .addGap(4, 4, 4)
                        .addComponent(finishedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 117, Short.MAX_VALUE))
        );

        viewApp.addTab("Procesos", process);

        logLabel.setText("Log");

        logList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        logPane.setViewportView(logList);

        schedulerLabel.setText("Planificador");

        schedulerList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        schedulerPane.setViewportView(schedulerList);

        javax.swing.GroupLayout schedulerLayout = new javax.swing.GroupLayout(scheduler);
        scheduler.setLayout(schedulerLayout);
        schedulerLayout.setHorizontalGroup(
            schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulerLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(schedulerPane)
                    .addComponent(schedulerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logPane)
                    .addComponent(logLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        schedulerLayout.setVerticalGroup(
            schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulerLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logLabel)
                    .addComponent(schedulerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schedulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(schedulerPane, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                    .addComponent(logPane))
                .addContainerGap(184, Short.MAX_VALUE))
        );

        viewApp.addTab("Planificador", scheduler);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GRAFICO");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));

        javax.swing.GroupLayout graphsLayout = new javax.swing.GroupLayout(graphs);
        graphs.setLayout(graphsLayout);
        graphsLayout.setHorizontalGroup(
            graphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphsLayout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );
        graphsLayout.setVerticalGroup(
            graphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphsLayout.createSequentialGroup()
                .addContainerGap(216, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        viewApp.addTab("Gráficos", graphs);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );

        viewApp.addTab("tab6", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewApp, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewApp)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void createModel(DefaultListModel model, Cola cola){
        Cola leerCola = cola;
        while (!leerCola.estaVacia()){
            model.addElement(leerCola.getCabeza().getProceso().getNombre());
            leerCola.desencolar();
        }
    }
    
    private void planificationPolicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planificationPolicyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_planificationPolicyActionPerformed

    private void saveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveSettingsActionPerformed

    private void boundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boundsActionPerformed
        
        //Si no es I/O Bound no permite la configuracion de ciclos de excepcion y ciclos de sastifaccion
        if ((String) bounds.getSelectedItem() == "I/O Bound"){
            cyclesOfExceptions.setEnabled(true);
            cyclesOfExceptions.setValue(1);
            cyclesOfSatisfaction.setEnabled(true);
            cyclesOfSatisfaction.setValue(1);
        } else {
            cyclesOfExceptions.setEnabled(false);
            cyclesOfExceptions.setValue(0);
            cyclesOfSatisfaction.setEnabled(false);
            cyclesOfSatisfaction.setValue(0);
        }
    }//GEN-LAST:event_boundsActionPerformed

    private void nameOfProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameOfProcessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameOfProcessActionPerformed

    private void createBottomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBottomActionPerformed
        
        //Crea el nuevo proceso por parte del usuario
        String nameNewProcess = nameOfProcess.getText();
        int instructionsNewProcess = (Integer) numberOfInstructions.getValue();
        String boundNewProcess = (String) bounds.getSelectedItem();
        int cicloex = (Integer) cyclesOfExceptions.getValue();
        int ciclofinex = (Integer) cyclesOfSatisfaction.getValue();
        
        Proceso newProcess = new Proceso(nameNewProcess, instructionsNewProcess, boundNewProcess, cicloex, ciclofinex);
        sch.getListo().add_listo(newProcess);
        System.out.println(newProcess.getNombre());
    }//GEN-LAST:event_createBottomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new View().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> blocked;
    private javax.swing.JComboBox<String> bounds;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JButton createBottom;
    private javax.swing.JSpinner cycleDuration;
    private javax.swing.JLabel cycleDurationLabel;
    private javax.swing.JSpinner cyclesOfExceptions;
    private javax.swing.JSpinner cyclesOfSatisfaction;
    private javax.swing.JList<String> finished;
    private javax.swing.JLabel finishedLabel;
    private javax.swing.JScrollPane finishedPane;
    private javax.swing.JPanel graphs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel logLabel;
    private javax.swing.JList<String> logList;
    private javax.swing.JScrollPane logPane;
    private javax.swing.JLabel mediumTimeLabel;
    private javax.swing.JScrollPane mediumTimePane;
    private javax.swing.JTextField nameOfProcess;
    private javax.swing.JSpinner numberOfInstructions;
    private javax.swing.JLabel planPolicy;
    private javax.swing.JComboBox<String> planificationPolicy;
    private javax.swing.JLabel planificationPolicyLabel;
    private javax.swing.JPanel process;
    private javax.swing.JList<String> readys;
    private javax.swing.JLabel readysLabel;
    private javax.swing.JScrollPane readysPane;
    private javax.swing.JLabel runningLabel;
    private javax.swing.JPanel runningPane;
    private javax.swing.JButton saveSettings;
    private javax.swing.JPanel scheduler;
    private javax.swing.JLabel schedulerLabel;
    private javax.swing.JList<String> schedulerList;
    private javax.swing.JScrollPane schedulerPane;
    private javax.swing.JPanel settings;
    private javax.swing.JLabel shortTimeLabel;
    private javax.swing.JScrollPane shortTimePane;
    private javax.swing.JList<String> suspendedBlocked;
    private javax.swing.JList<String> suspendedReadys;
    private javax.swing.JLabel suspendedReadysLabel;
    private javax.swing.JScrollPane suspendedReadysPane;
    private javax.swing.JTabbedPane viewApp;
    // End of variables declaration//GEN-END:variables
}
